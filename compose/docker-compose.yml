version: '3.7'

volumes:
    postgres_data: {}

networks:
    kong-net:
        external: false

services:
    keycloak:
        image: jboss/keycloak
        container_name: keycloak
        depends_on:
            - db
        ports:
            - 8080:8080
        networks:
            - kong-net
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: db
            DB_DATABASE: kong
            DB_USER: kong
            DB_SCHEMA: public
            DB_PASSWORD: kong
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: admin

    # kong-migrations:
        # image: "${KONG_DOCKER_TAG:-kong:latest}"
        # command: kong migrations bootstrap
        # depends_on:
            # - db
        # environment:
            # KONG_DATABASE: postgres
            # KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
            # KONG_PG_HOST: db
            # KONG_PG_USER: ${KONG_PG_USER:-kong}
            # KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
        # secrets:
            # - kong_postgres_password
        # networks:
            # - kong-net
        # restart: on-failure
        # deploy:
          # restart_policy:
            # condition: on-failure

    # kong-migrations-up:
        # image: "${KONG_DOCKER_TAG:-kong:latest}"
        # command: kong migrations up && kong migrations finish
        # depends_on:
            # - db
        # environment:
            # KONG_DATABASE: postgres
            # KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
            # KONG_PG_HOST: db
            # KONG_PG_USER: ${KONG_PG_USER:-kong}
            # KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
        # secrets:
            # - kong_postgres_password
        # networks:
            # - kong-net
        # restart: on-failure
        # deploy:
            # restart_policy:
                # condition: on-failure

    kong:
        image: kong-oidc
        user: "${KONG_USER:-kong}"
        container_name: kong
        depends_on:
            - db
            - keycloak
        environment:
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: '0.0.0.0:8001'
            KONG_CASSANDRA_CONTACT_POINTS: db
            KONG_DATABASE: postgres
            KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
            KONG_PG_HOST: db
            KONG_PG_USER: ${KONG_PG_USER:-kong}
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
            KONG_LOG_LEVEL: info
        secrets:
            - kong_postgres_password
        networks:
            - kong-net
        ports:
            - "8000:8000/tcp"
            - "127.0.0.1:8001:8001/tcp"
            - "8443:8443/tcp"
            - "127.0.0.1:8444:8444/tcp"
        healthcheck:
            test: ["CMD", "kong", "health"]
            interval: 10s
            timeout: 10s
            retries: 10
        restart: on-failure
        deploy:
            restart_policy:
                condition: on-failure

    db:
        image: postgres
        container_name: db
        environment:
            POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
            POSTGRES_USER: ${KONG_PG_USER:-kong}
            POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
        secrets:
            - kong_postgres_password
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
            interval: 30s
            timeout: 30s
            retries: 3
        restart: on-failure
        deploy:
            restart_policy:
                condition: on-failure
        stdin_open: true
        tty: true
        networks:
            - kong-net
        volumes:
            - postgres_data:/var/lib/postgresql/data
    konga:
        image: pantsel/konga
        container_name: konga
        depends_on:
            - db
            - kong
            - keycloak
        ports:
            - 1337:1337
        networks:
            - kong-net
        environment:
            DB_HOST: db
            DB_USER: kong
            DB_PASSWORD: kong
            DB_DATABASE: konga_db

secrets:
    kong_postgres_password:
        file: ./POSTGRES_PASSWORD
